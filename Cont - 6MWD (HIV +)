# Load required libraries
library(readxl)
library(dplyr)
library(broom)
library(tidyr)
library(lmtest)
library(sandwich)

# Load dataset
file_path <- "C:/Users/USER/Desktop/Projects/ECHO-6MW/Second set/Dataset_TTEand6MWD.xlsx"
data_all <- read_excel(file_path)

# Filter HIV-positive group
data <- data_all %>%
  filter(a1_hiv_st == 1) %>%
  mutate(
    sex = as.factor(sex),
    race_id_der = as.factor(race_id_der),
    bmi_cat_tri_der = as.factor(bmi_cat_tri_der),
    ever_smok_stat_der = as.factor(ever_smok_stat_der),
    ever_ivdu_stat_der = as.factor(ever_ivdu_stat_der),
    g9_hepatitis_c = as.factor(g9_hepatitis_c),
    anemia_der = as.factor(anemia_der),
    a1_hiv_st = as.factor(a1_hiv_st),
    post_old_gli_der = as.factor(post_old_gli_der),
    dlco_stat_binary_gli_pft_1_der = as.factor(dlco_stat_binary_gli_pft_1_der),
    vl_detectable_der = as.factor(vl_detectable_der)
  ) %>%
  droplevels()

# Define echo variables
independent_vars <- c(
  "lv_dia_diam", "lv_sys_diam", "lv_septal_thickness", "lv_post_wall_thickness",
  "aortic_root_size", "la_diam", "lv_ef", "trv", "rap", "pasp"
)

# Define model adjustments
model_adjustments <- list(
  "Model 0" = c(),
  "Model 1" = c("age_tte_der", "sex", "race_id_der"),
  "Model 2" = c("age_tte_der", "sex", "race_id_der", "bmi_cat_tri_der",
                "ever_smok_stat_der", "ever_ivdu_stat_der", "g9_hepatitis_c", "anemia_der"),
  "Model 3" = c("age_tte_der", "sex", "race_id_der", "bmi_cat_tri_der",
                "ever_smok_stat_der", "ever_ivdu_stat_der", "g9_hepatitis_c", "anemia_der",
                "time_living_with_hiv_der", "cd4", "vl_detectable_der"),
  "Model 4" = c("age_tte_der", "sex", "race_id_der", "bmi_cat_tri_der",
                "ever_smok_stat_der", "ever_ivdu_stat_der", "g9_hepatitis_c", "anemia_der",
                "time_living_with_hiv_der", "cd4", "vl_detectable_der",
                "post_old_gli_der", "dlco_stat_binary_gli_pft_1_der")
)

# Initialize results table
results_hivpos <- data.frame(matrix(NA, nrow = length(model_adjustments), ncol = length(independent_vars)))
rownames(results_hivpos) <- names(model_adjustments)
colnames(results_hivpos) <- independent_vars

# Run models (HC3 robust SEs) and fill "beta, p-value"
for (model_name in names(model_adjustments)) {
  adjusters <- model_adjustments[[model_name]]
  
  for (var in independent_vars) {
    # Drop NAs for necessary variables
    vars_needed <- c("dist_meters_1", var, adjusters)
    subdat <- data %>%
      dplyr::select(all_of(vars_needed)) %>%
      tidyr::drop_na() %>%
      droplevels()
    
    if (nrow(subdat) < 2) {
      results_hivpos[model_name, var] <- "NA"
      next
    }
    
    # Drop adjustment variables that collapse to 1 level
    valid_adj <- adjusters[sapply(adjusters, function(x) {
      obj <- subdat[[x]]
      if (is.factor(obj)) nlevels(obj) >= 2 else TRUE
    })]
    
    # Build formula and run model
    formula_str <- if (length(valid_adj) == 0) {
      paste("dist_meters_1 ~", var)
    } else {
      paste("dist_meters_1 ~", var, "+", paste(valid_adj, collapse = " + "))
    }
    
    model <- lm(as.formula(formula_str), data = subdat)
    
    # HC3 robust results
    robust_tbl <- lmtest::coeftest(model, vcov = sandwich::vcovHC(model, type = "HC3")) %>%
      broom::tidy()
    main_row <- robust_tbl %>% dplyr::filter(term == var)
    
    results_hivpos[model_name, var] <- if (nrow(main_row) == 1) {
      sprintf("%.3f, %.3f", main_row$estimate, main_row$p.value)
    } else {
      "NA"
    }
  }
}

# View the final result table
View(results_hivpos)
